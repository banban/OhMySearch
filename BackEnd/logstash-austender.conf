input {  
	file {
		path => "C:/Search/Import/AusTender/*.csv"
		start_position => "beginning"
		ignore_older => 0
		type => "austender"
	}
}
filter {  
	csv {
		columns => ["Agency_Parent_CN_ID","CN_ID","Publish_Date","Amendment_Publish_Date","Status","StartDate","EndDate","Value","Description","Agency_Ref_ID","Category","Procurement_Method","ATM_ID","SON_ID","Confidentiality_Contract","Confidentiality_Contract_Reason(s)","Confidentiality_Outputs","Confidentiality_Outputs_Reason(s)","Consultancy","Consultancy_Reason","Amendment_Reason","Supplier_Name","Supplier_Address","Supplier_City","Supplier_Postcode","Supplier_Country","Supplier_ABNExempt","Supplier_ABN","Agency_Branch","Agency_Divison","Agency_Postcode"]
		separator => "	"
	}
	#if [Agency_Parent_CN_ID] == "Contract Notice Export" {
	#  drop { }
	#}
	#if [Agency_Parent_CN_ID] == "" {
	#  drop { }
	#}
	if [Agency_Parent_CN_ID] == "Agency	Parent CN ID" {
	  drop { }
	}
	date {
		match => [ "Publish_Date" , "dd-MM-yy HH:mm aa" ]
		match => [ "StartDate" , "dd-MMM-yy" ]
		match => [ "EndDate" , "dd-MMM-yy" ]
	}
	#ruby {
	#	code => "event['Publish_Date'] = Date.parse(event['Publish_Date']);"
	#}
}
output {  
	elasticsearch {
		hosts => ["localhost:9200"]
		action => "index"
		index => "web_v2"
		workers => 1
	}
	stdout {
		 codec => rubydebug
	}
}