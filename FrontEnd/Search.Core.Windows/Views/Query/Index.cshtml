@model Search.Core.Windows.Models.Query
@{
    ViewData["Title"] = "Search Results";
}

<div class="col-lg-pull-2 col-md-pull-2 col-sm-pull-2 col-lg-12 col-md-12 col-sm-12" data-role="content" data-position="fixed">
    @await Component.InvokeAsync("QueryOptions", Model) 
    
    <ul class="nav nav-tabs" role="tablist">
        <li class="active"><a href="#Search-Results" role="tab" data-toggle="tab" aria-expanded="true" class="glyphicon glyphicon-list">Results <span class="badge">@Model.Total</span></a></li>
        @*<li><a href="#Search-Summary" role="tab" data-toggle="tab" class="glyphicon glyphicon-equalizer">Summary</a></li>
            <li><a href="#Search-Charts" role="tab" data-toggle="tab" class="glyphicon glyphicon-adjust">Charts</a></li>*@
        <li><a id="MapsTab" href="#Search-Maps" role="tab" data-toggle="tab" class="glyphicon glyphicon-map-marker">Maps</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="Search-Results">
            @if (Model.ChosenOptions.Contains("4_1")
                || (!Model.ChosenOptions.Contains("4_1") && !Model.ChosenOptions.Contains("4_2") && !Model.ChosenOptions.Contains("4_3")))
            {
                <div class="scroll col-lg-12 col-md-12">
                    <a class="jscroll-next" hidden href="../Query/Scroll?from=0&term=@(Uri.EscapeUriString(Model.QueryTerm))&options=@(Uri.EscapeUriString(Model.ChosenOptions))">...</a>
                </div>
            }
            else if (Model.ChosenOptions.Contains("4_2"))
            {
                <div class="page col-lg-12 col-md-12">
                    @await Html.PartialAsync("Page")
                </div>
            }
            else if (Model.ChosenOptions.Contains("4_3"))
            {
                <div class="page col-lg-12 col-md-12">
                    @await Html.PartialAsync("Tile")
                </div>
            }
        </div>
        <div class="tab-pane" id="Search-Summary">
            <div id="searchSummary">
                @*@Html.EditorFor(model => model.Properties, "Properties")*@
            </div>
        </div>
        <div class="tab-pane" id="Search-Charts">
            <div id="chartSummary"></div>
        </div>
        <div class="tab-pane" id="Search-Maps">
            <div id="googleMap"></div>
        </div>
    </div>
</div>


<div id="accordion" class="panel-group sidebar col-lg-pull-1 col-md-pull-1 col-sm-pull-1">
    @*<div class="panel panel-info">
        <div class="panel-heading">
            <h4 class="panel-title">
               Level of confidence
            </h4>
        </div>
        <div id="collapse_LevelofConfidence" class="panel-collapse collapse in">
            <div class="panel-body">
                <output for="fader" id="confidencelbl" class="text-center">50%</output>
                <input type="range" min="0" max="100" value="50" id="confidence" orient="vertical" step="10" oninput="outputUpdate(value)" />
            </div>
        </div>
    </div>*@

    <input id="ChosenFilters" hidden asp-for="ChosenAggregations" />
    @foreach (var aggr in Model.GetAggregations())
    {
        <div class="panel panel-info">
            <div class="panel-heading">
                <h4 class="panel-title">
                    @*<a data-toggle="collapse" data-parent="#accordion" href="#collapse_@aggr.Replace(" ","")">
                    </a>*@
                    @aggr
                </h4>
            </div>
            <div id="collapse_@aggr.Replace(" ","")" class="panel-collapse collapse in">
                <div class="panel-body">
                    <ul class="list-unstyled">
                        @foreach (var item in Model.GetAggregations(aggr))
                        {
                            <li class="agg-link"><input type="checkbox" class="aggregate-filter" id="@Html.Raw(@aggr.Replace(" ",""))_@item.Key"/> @item.Key <span class="badge">@item.Count</span></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    <script src="~/lib/jquery.jscroll/jquery.jscroll.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@(Startup.GetGoogleMapKey())&language=en" type="text/javascript"></script>
    <script src="~/js/GoogleMap.js"></script>
    <script type="text/javascript">
        $.ajaxSetup({ cache: false }); //disable modal dialog caching

        function outputUpdate(vol) {
            //document.querySelector('#confidencelbl').value = vol + "%";
            $('#confidencelbl').val(vol + " %");
        }


        $(document).ready(function () {
            $('.scroll').jscroll({
                //autoTriggerUntil: 3,
                //padding: 20,
                //loadingHtml: '<div>End of search</div>',
                loadingHtml: '<div class="row"><div class="col s4 center"><div class="progress"><div class="indeterminate"></div>End of search</div></div></div>',
                nextSelector: 'a.jscroll-next:last',
                contentSelector: 'li'
            });
            
            $('input.aggregate-filter').click(function () {
                var agg = $(this).name +"_"+ $(this).val();
                console.log(agg);
                console.log($(this).val());
                if ($(this).val()=="on") {
                    $("#ChosenAggregations").val($("#ChosenAggregations").val().replace(agg + ",", ""));
                }
                else{
                    $("#ChosenAggregations").val($("#ChosenAggregations").val() + "," + agg);
                }
            });
            //$('.agg-link').click(function () {
            //    $('li.input check').parent().removeClass("active").end();
            //    $('li a').filter("[href=" + $(this).attr("href") + "]").parent().addClass("active");
            //});

            //$(function () {
            //    $("#aggregations").accordion();
            //});

            //$('#confidence').change(function () {
            //    $('#confidencelbl').val(vol + " %");

            //    switch (this.value) {
            //        case 1:
            //            alert(1);
            //            $('#confidencelbl').html("Help me!");
            //            break;
            //        case 2:
            //            $('#confidencelbl').html("Not sure");
            //            break;
            //        case 3:
            //            $('#confidencelbl').html("Average");
            //            break;
            //        case 4:
            //            $('#confidencelbl').html("More or less");
            //            break;
            //        case 5:
            //            $('#confidencelbl').html("I know what I'm after");
            //            break;
            //        //default:
            //        //    $('#confidencelbl').html("No idea");
            //        //    break;
            //    }
        });
    </script>
}
