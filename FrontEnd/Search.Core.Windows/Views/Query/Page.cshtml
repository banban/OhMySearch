@model Search.Core.Windows.Models.Query
@if (Model != null)
{
    @await Component.InvokeAsync("Pager", new { query = Model })

    <ul id="ulllist" class="list-unstyled">
        @foreach (var item in Model.SearchResults.Items)
        {
            <li class="search-item">
                @if (item.CanRead)
                {
                    <a class="btn btn-info glyphicon glyphicon-info-sign" title="Details" asp-action="Details" asp-controller="SearchResult" asp-route-_index="@item.Index" asp-route-_type="@item.Type" asp-route-_id="@item.Id" data-toggle="modal" data-target="#editDialog" , data-loading-text="Loading..."></a>
                }
                Index: @item.Index; Type: @item.Type; Score: @item.Score;
                @if (item.Extension.ToLower() == "pdf")
                {
                    <img id="Content" src="~/images/pdf.gif" alt="Image" />
                }
                else
                {
                    <label class="@item.Extension">@item.Extension</label>
                }
                @if (!string.IsNullOrEmpty(item.Path) && item.CanRead)
                {
                    <a title="@item.Path.Replace("/", "\\")" class="glyphicon glyphicon-open-file" href='file:///@item.Path.Replace("\\", "/")'>Open</a>
                }
                <br /><span class="small">@Html.Raw(item.Summary)</span>
            </li>
        }
    </ul>
    @await Component.InvokeAsync("Pager", new { query = Model })

}